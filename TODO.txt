* add Bit type
* add dec macro
** add macros

fib

(^ fib-rec [n]
  (if (< n 2) n (+ (fib-rec (decr n)) (fib-rec (decr n)))))

* move BindType/Method to Lib type

* add support for lib names in ids
** claes

(term/f-rgb)

* add echo flag to read-key

* add Color type
** add rgb method to create
** change f/b-rgb to take Color arg

* add Point type

* add stack type
** add stack reader

(^ repl []
  (print "sharpl v" VERSION " - may the src be with you\n\n")

  (^ read-input [buffer]
    (print "  ")
    (let [line (read-line)]
      (if line
        (rec (push buffer line)
        (string/join buffer \n)))))
  
  (let [input (read-input)]
    (if input
      (do 
        (eval input)
        (repl)))))