* VC
** Reformat - Ctrl+Shift+I

* load command line args in Program.cs

* improve repl
** print line numbers[two positions]
** keep loc

(let [m {"foo":1 "bar":2 "baz":3}]
  (inc (m "bar"))
  m)

* add Form.CollectIds()

* add if macro

* add /
** like -

* add =

* add maps/sets
** add map reader

* editor
** two panes
*** switch with tab
*** display path
** highlight current line in active pane
** add Editor lib
*** add Pane type
*** x, path?, buffer

(define pane-width (/ (term/width) 2))
(define left-pane (editor/Pane 1 pane-width))
(define right-pane (editor/Pane pane-width pane-width))
(define active-pane left-pane)

(^ switch-pane []
  (set active-pane (if (= active-pane left-pane) right-pane left-pane)))

* reimplement repl as editor buffer
** print line numbers
*** keep same loc in repl

* add dec macro
** how do you dec a map entry?

* add let macro
** add frames

* add ^-macro

* add tail calls

* add Pair type/reader

(^ repl []
  (print "sharpl v" VERSION " - may the src be with you\n\n")

  (^ read-input [buffer]
    (print "  ")
    (let [line (read-line)]
      (if line
        (rec (push buffer line)
        (string/join buffer \n)))))
  
  (let [input (read-input [])]
    (if input
      (do 
        (eval input)
        (repl)))))

fib

(^ fib-rec [n]
  (if (< n 2) n (+ (fib-rec (decr n)) (fib-rec (decr n)))))